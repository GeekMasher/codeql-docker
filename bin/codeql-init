#!/bin/bash
set -e
# Init config
if [[ -f /codeql/codeql-config.sh ]] ; then
    source /codeql/codeql-config.sh
else
    source ./config/codeql-config.sh
fi

AUTO_DETECT=0
CODEQL_TRACING=1
CODEQL_LANGUAGES=

for i in "$@"; do
  case $i in
    --auto-detect)
        AUTO_DETECT=1
        shift
        ;;
    --disable-tracing)
        CODEQL_TRACING=0
        shift
        ;;
     -l=*|--language=*)
        CODEQL_LANGUAGES="${i#*=}"
        shift
        ;;
    -c=*|--command=*)
        BUILD_COMMAND="${i#*=}"
        shift
        ;;
    -*|--*)
        echo "Unknown option $i"
        exit 1
        ;;
    *)
        ;;
  esac
done

if [[ "$AUTO_DETECT" = "1" ]]; then
    if ! command -v gh &> /dev/null ; then
        echo "GitHub CLI is not installed and can't auto-detect languages"
        exit 1
    fi
    if [ -z $GITHUB_TOKEN ]; then
        echo "GitHub Access Token is not present and is required for language detection"
        exit 1
    fi
    # Get the data from GitHub
    # https://github.com/advanced-security/advanced-security-material/blob/main/code-scanning-workflows/reusable_code_scanning-00.yml#L19-L27
    # JSON array
    language_data=$(gh api repos/${GITHUB_REPOSITORY}/languages -q '[{"C":"cpp", "C++":"cpp", "C#":"csharp", "Go":"go", "Java":"java", "JavaScript":"javascript", "TypeScript":"javascript", "Python":"python", "Ruby":"ruby"}[keys[]]] | unique -[null]')
    # Remove unneeded chars
    CODEQL_LANGUAGES=$(echo $language_data | tr -d '"[]')
fi


if [ -z $CODEQL_LANGUAGES ] ; then
    echo "No CodeQL languages were set"
    exit 1
fi 

# comma seperated list (`java,javascript`)
for CODEQL_LANGUAGE in ${CODEQL_LANGUAGES//,/ } ; do
    echo "CodeQL Language :: $CODEQL_LANGUAGE"

    CODEQL_GITHUB_REPOSITORY=$(echo $GITHUB_REPOSITORY | tr '/' '_')
    CODEQL_DATABASE="$CODEQL_DATABASES/${CODEQL_LANGUAGE}-${CODEQL_GITHUB_REPOSITORY}"

    if [ -d $CODEQL_DATABASES ] ; then
        echo "Deleting old database :: $CODEQL_DATABASE"
        rm -rf $CODEQL_DATABASE
    fi

    if [ ! -z ${BUILD_COMMAND+x} ] && [[ "$CODEQL_LANGUAGE" =~ ^(cpp|csharp|java)$ ]] ; then
        codeql database create \
            --language="$CODEQL_LANGUAGE" \
            --command=${BUILD_COMMAND} \
            $CODEQL_DATABASE
    else
        codeql database create \
            --language="$CODEQL_LANGUAGE" \
            $CODEQL_DATABASE
        
        if [ "$CODEQL_TRACING" = "1" ] && [[ "$CODEQL_LANGUAGE" =~ ^(cpp|csharp|java|go)$ ]]; then
            echo "CodeQL -> Start Tracing"
            # Note: This only supports one language at a time to be intercepted using tracing
            source $CODEQL_DATABASE/temp/tracingEnvironment/start-tracing.sh
        fi
    fi
done
